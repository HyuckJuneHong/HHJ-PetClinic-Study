plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'kr.co'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    //H2
    runtimeOnly 'com.h2database:h2'

    //MySQL
    implementation 'com.mysql:mysql-connector-j:8.0.31'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    //Test
    testImplementation 'org.mockito:mockito-inline:3.4.4'
    testImplementation group: 'junit', name: 'junit'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    /** QueryDSL
     *
     * - Spring Boot 3.0.0로 버전 업데이트되면서 Java EE가 아닌 Jakarta EE로 변경
     * - 추가로 querydsl-apt jakarta 버전에선 javax.annotation.processing.Processor를 서비스로 제공.
     * - 그리고 자바 컴파일가 이를 사용해 Q-Class를 생성.
     * - 즉, querydsl-apt jakarta 버전부터 플러그인 설정이 필요없다.
     */
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    /** Swagger
     *
     * springfox
     * - Springboot 3.x.x부터 springfox 가 적용되지 않는다는 사용해보라는 글을 구글링하다가 발견.
     * - implementation 'io.springfox:springfox-boot-starter:3.0.0' -> X
     *
     * 공식 문서 : https://springdoc.org/v2/
     * - SwaggerConfig 없어도 적용이 잘된다.
     * - 주소 : http://localhost:8080/swagger-ui/index.html
     */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    //Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
}

tasks.named('test') {
    useJUnitPlatform()
}
